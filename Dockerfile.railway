# Railway Frontend Dockerfile
# =========================
# NOTE: This file must be saved as UTF-8 without BOM.
# If you see “unknown instruction: ��#”, strip the BOM with:
#    sed -i '1s/^\xEF\xBB\xBF//' Dockerfile.railway

# BUILD STAGE
FROM node:18-alpine AS build

# Set working directory
WORKDIR /app

# Copy package files first (for better layer caching)
COPY package*.json ./

# Install dependencies (no mounted caches under node_modules)
RUN npm ci --prefer-offline --no-audit --loglevel=error

# Copy source code
COPY . .

# Build with environment variables
ARG VITE_API_URL
ENV VITE_API_URL=$VITE_API_URL

# Debug: show environment vars during build
RUN echo "BUILD DEBUG: VITE_API_URL = $VITE_API_URL"
RUN echo "BUILD DEBUG: All ENV vars:" && env | grep -E "(VITE_|NODE_|RAILWAY_)" || true

# Build the application with verbose output
RUN echo "BUILD DEBUG: Starting build process..." && \
    npm run build 2>&1 | tee build.log

# Debug: check built files for API URL
RUN echo "BUILD DEBUG: Checking built files for API URL..." && \
    find dist -name "*.js" -exec grep -l "fastapi-production-1d13.up.railway.app" {} \; || \
    echo "BUILD DEBUG: API URL not found in built files"

# Debug: sample content from built JS files
RUN echo "BUILD DEBUG: Sample from built JS files:" && \
    find dist -name "*.js" | head -1 | xargs head -50 || \
    echo "BUILD DEBUG: No JS files found"

# Debug: search for VITE_API_URL in built files
RUN echo "BUILD DEBUG: Searching for VITE_API_URL in built files:" && \
    find dist -name "*.js" -exec grep -H "VITE_API_URL" {} \; || \
    echo "BUILD DEBUG: VITE_API_URL not found in built files"

# SERVE STAGE
FROM node:18-alpine

WORKDIR /app

# Install serve globally
RUN npm install -g serve

# Copy only the built assets from build stage
COPY --from=build /app/dist ./dist

# Expose port
EXPOSE $PORT

# Start the application
CMD ["sh", "-c", "serve -s dist -l $PORT --no-clipboard --no-port-switching"]
